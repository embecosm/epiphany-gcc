2013-06-14  Joern Rennecke  <joern.rennecke@embecosm.com>

        * config/epiphany/epiphany.h (ASM_OUTPUT_SYMBOL_REF): Define.

2013-03-26  Joern Rennecke <joern.rennecke@embecosm.com>

	* config/epiphany/epiphany.md (addsi3_i) <r/r/CnL>: Add '#' to
	output template alternative.

2013-03-18  Joern Rennecke <joern.rennecke@embecosm.com>

	* config/epiphany/epiphany.c (epiphany_select_cc_mode):
	Don't use CC_FPmode for ORDERED / UNORDERED.
	* config/epiphany/epiphany.md (cmpsf_ord): Make pattern
	unconditional.

	* config/epiphany/constraints.md (CnL): New constraint.
	* config/epiphany/epiphany.md (addsi3_i): Add r/r/CnL alternative.
	* config/epiphany/predicates.md (add_operand): Allow 1024.

2013-01-15  Joern Rennecke <joern.rennecke@embecosm.com>

	* config/epiphany/epiphany.md (GPR_1): New constant.
	(define_expand "mov<mode>cc): FAIL if gen_compare_reg returned 0.
	* config/epiphany/epiphany.c (gen_compare_reg):
	For flag_finite_math_only, avoid swapping operands when r0 and/or r1
	is already in place.
	Use GPR_0 / GPR_1 instead of 0/1 for r0/r1 register numbers.
	Don't require being called during rtl expansion; If y operlaps r0,
	return 0.
	(epiphany_compute_frame_size, epiphany_expand_prologue): Use GPR_1.
	(epiphany_expand_epilogue): Likewise.

2013-01-09  Joern Rennecke <joern.rennecke@embecosm.com>
	Merged from mainline:
	2013-01-09  Jakub Jelinek  <jakub@redhat.com>
	PR tree-optimization/55921
	* tree-complex.c (expand_complex_asm): New function.
	(expand_complex_operations_1): Call it for GIMPLE_ASM.

2012-08-29  Joern Rennecke <joern.rennecke@embecosm.com>

	* config/epiphany/epiphany.c (epiphany_adjust_cost): Use
	reg_overlap_mentioned_p.

2012-08-27  Joern Rennecke <joern.rennecke@embecosm.com>

	* config/epiphany/epiphany.opt (mfp-iarith): New option.
	* config/epiphany/epiphgany.md (addsi3): Check for TARGET_FP_IARITH.
	(subsi3, iadd, isub): Rename to ..
	(subsi3_i, iadd_i, isub_i): .. This.
	(subsi3, iadd, isub): New define_expands.

	* config/epiphany/epiphgany.md (attribute type): Add v2fp.
	(attribute fp_mode): Test for v2fp.
	(<float_operation:insn_opname>v2sf3_i): Change type to v2fp.
	* config/epiphany/epiphgany-sched.md (fp_arith_nearest, fp_arith_trunc):
	Combine to ..
	(fp_arith): .. this.
	(v2fp_arith): New insn reservation.

	* config/epiphany/epiphgany.md (maddsi_combine): Fix output pattern.

	* config/epiphany/predicates.md (addsub_operator): New predicate.
	* config/epiphany/epiphany-sched.md (sched_use_fpu): New attribute.
	* config/epiphany/epiphany.md (isub_i+1): New peephole2.

	* config/epiphany/epiphany.h (EPIPHANY_LIBRARY_EXTRA_SPEC): Define.
	(EXTRA_SPECS, DRIVER_SELF_SPECS): Likewise.
	* config/epiphany/t-epiphany (SPECS): Set.
	(specs): New rule.

	* config/epiphany/epiphany-protos.h (get_attr_sched_use_fpu): Declare.
	* config/epiphany/epiphany.md (isub_i+1): Work around generator bug.

2012-08-01  Joern Rennecke <joern.rennecke@embecosm.com>

	* tree-ssa-math-opts.c (mult_to_fma_pass): New file static struct.
	(convert_mult_to_fma): In first pass, don't use an fms construct
	when we don't have an fms operation, but fmna.
	(execute_optimize_widening_mul): Add a second pass if
	convert_mult_to_fma requests it.

2012-07-31  Joern Rennecke <joern.rennecke@embecosm.com>

	* config/epiphany/epiphany.h (LIB_SPEC): Remove -lelib.

	* config/epiphany/predicates.md (move_double_src_operand):
	Check that misaligned addresses are offsettable.
	(move_dest_operand): Likewise.
	* config/epiphany/epiphany.c (REG_OK_FOR_BASE_P): Don't force a
	misaligned stack address to reg+index.

2012-06-29  Joern Rennecke <joern.rennecke@embecosm.com>

	* config/epiphany/epiphany.h (HARD_REGNO_RENAME_OK): Define.
	* config/epiphany/epiphany-protos.h (epiphany_regno_rename_ok): Declare.
	* config/epiphany/epiphany.c (epiphany_regno_rename_ok): New function.

	* config/epiphany/epiphany.md (mov<mode>, *mov<mode>_insn): Check
	for misaligned memory operands.
	* config/epiphany/predicates.md	(misaligned_operand): New predicate.

	* config/epiphany/epiphany.opt (-may-round-for-trunc): New option.
	* config/epiphany/epiphany.md (*fix_truncsfsi2_i): Take it into account.

2012-01-24  Joern Rennecke <joern.rennecke@embecosm.com>

	* config/epiphany/epiphany.h (struct GTY (()) machine_function):
	Add member lr_slot_known.
	* config/epiphany/epiphany.md (reload_insi_ra): Compute lr_slot_offset
	if necessary.
	* config/epiphany/epiphany.c (epiphany_compute_frame_size):
	Remove code that sets lr_slot_offset according to what a previous
	version of epiphany_emit_save_restore used to do.
	(epiphany_emit_save_restore): When doing an lr save or restore,
	set/verify lr_slot_known and lr_slot_offset.

2012-01-23  Joern Rennecke <joern.rennecke@embecosm.com>

	* config/epiphany/epiphany.h (ASM_DECLARE_FUNCTION_SIZE): Redefine,
	adding __forwarder_dst__ prefix if a forwarder_section attribute is
	present.
	(epiphany_function_type): Replace types for specific interrupts with
	EPIPHANY_FUNCTION_INTERRUPT.
	(EPIPHANY_INTERRUPT_P): Update.
	* config/epiphany/epiphany.c (epiphany_handle_forwarder_attribute):
	New static function.
	(epiphany_attribute_table) <interrupt>: min_len is 0, max_len is 9.
	<disinterrupt>: Affects type identity.
	(epiphany_handle_interrupt_attribute): Handle variable number of
	arguments.
	(epiphany_compute_function_type): Update for new
	epiphany_function_type definition.
	(epiphany_expand_prologue): Don't save (reg:SI GPR_0) for longcall
	interrupt forwarders.
	(epiphany_start_function): Handle multiple interrupt arguments and/or
	forwarder_section attribute.

2011-12-21  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* doc/extend.texi: Updated information on interrupt attribute for
	Epiphany.

2011-08-30  Joern Rennecke <joern.rennecke@embecosm.com>

	* tree-nested.c (get_trampoline_type): Suppress -Wpadded while
	laying out TRAMPOLINE_TYPE.

2009-09-23  Joern Rennecke <joern.rennecke@embecosm.com>

	* alias.c (base_alias_check): Allow for aliases between stack-
	and frame-pointer referenced memory.
